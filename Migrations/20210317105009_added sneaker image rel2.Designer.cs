// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_herhaling_sneakers.Data;

namespace backend_herhaling_sneakers.Migrations
{
    [DbContext(typeof(SneakerContext))]
    [Migration("20210317105009_added sneaker image rel2")]
    partial class addedsneakerimagerel2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OccasionSneaker", b =>
                {
                    b.Property<Guid>("OccasionsOccasionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SneakersSneakerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OccasionsOccasionId", "SneakersSneakerId");

                    b.HasIndex("SneakersSneakerId");

                    b.ToTable("OccasionSneaker");
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("f13ad2f3-563c-4318-974e-3385ba50fda1"),
                            Name = "ASICS"
                        },
                        new
                        {
                            BrandId = new Guid("e0c717f2-847b-4f6b-9525-d636a7598a8b"),
                            Name = "CONVERSE"
                        },
                        new
                        {
                            BrandId = new Guid("91da7bd3-d4e7-404e-b7b8-50a3f1e189c5"),
                            Name = "VANS"
                        },
                        new
                        {
                            BrandId = new Guid("2bc8aa37-fadc-4705-b1c8-f92cac8e0e3b"),
                            Name = "NIKE"
                        });
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SneakerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Occasion", b =>
                {
                    b.Property<Guid>("OccasionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OccasionId");

                    b.ToTable("Occasions");

                    b.HasData(
                        new
                        {
                            OccasionId = new Guid("2d7a920f-0abd-4045-8d88-458c5502a7d5"),
                            Name = "Sports"
                        },
                        new
                        {
                            OccasionId = new Guid("9a2086cb-91a4-4c83-b709-50d4b097298e"),
                            Name = "Casual"
                        },
                        new
                        {
                            OccasionId = new Guid("878b4642-c653-4509-b914-4ba1d55e0fdb"),
                            Name = "Skate"
                        },
                        new
                        {
                            OccasionId = new Guid("2cc9fc43-4833-4d2d-840b-da889fdf67ae"),
                            Name = "Diner"
                        });
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Sneaker", b =>
                {
                    b.Property<Guid>("SneakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("SneakerId");

                    b.ToTable("Sneakers");
                });

            modelBuilder.Entity("OccasionSneaker", b =>
                {
                    b.HasOne("backend_herhaling_sneakers.Models.Occasion", null)
                        .WithMany()
                        .HasForeignKey("OccasionsOccasionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_herhaling_sneakers.Models.Sneaker", null)
                        .WithMany()
                        .HasForeignKey("SneakersSneakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
