// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_herhaling_sneakers.Data;

namespace backend_herhaling_sneakers.Migrations
{
    [DbContext(typeof(SneakerContext))]
    partial class SneakerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("4f3439de-8ec0-4486-8204-0b621a09642c"),
                            Name = "ASICS"
                        },
                        new
                        {
                            BrandId = new Guid("79cf5795-56ed-44c6-8eec-7f792cc79813"),
                            Name = "CONVERSE"
                        },
                        new
                        {
                            BrandId = new Guid("c9aa7ea5-5c10-4a01-aebd-4b796bf1e9b3"),
                            Name = "VANS"
                        },
                        new
                        {
                            BrandId = new Guid("69ad5fa2-fa4a-4985-95c0-9b29be6cc0b7"),
                            Name = "NIKE"
                        });
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SneakerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageId");

                    b.HasIndex("SneakerId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Occasion", b =>
                {
                    b.Property<Guid>("OccasionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OccasionId");

                    b.ToTable("Occasions");

                    b.HasData(
                        new
                        {
                            OccasionId = new Guid("66140e8a-fa09-443b-bfd7-8546f5f095d0"),
                            Name = "Sports"
                        },
                        new
                        {
                            OccasionId = new Guid("b60ddfce-fd93-4717-8180-1253360da255"),
                            Name = "Casual"
                        },
                        new
                        {
                            OccasionId = new Guid("3249dad1-c967-443a-b5ae-a66b7b1b18cd"),
                            Name = "Skate"
                        },
                        new
                        {
                            OccasionId = new Guid("fdd022c7-d484-433d-a2b8-5518d5a37858"),
                            Name = "Diner"
                        });
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Sneaker", b =>
                {
                    b.Property<Guid>("SneakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("SneakerId");

                    b.ToTable("Sneakers");
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.SneakerOccasion", b =>
                {
                    b.Property<Guid>("SneakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OccasionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SneakerId", "OccasionId");

                    b.HasIndex("OccasionId");

                    b.ToTable("SneakerOccasions");
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Image", b =>
                {
                    b.HasOne("backend_herhaling_sneakers.Models.Sneaker", null)
                        .WithMany("Images")
                        .HasForeignKey("SneakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.SneakerOccasion", b =>
                {
                    b.HasOne("backend_herhaling_sneakers.Models.Occasion", null)
                        .WithMany("SneakerOccasions")
                        .HasForeignKey("OccasionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_herhaling_sneakers.Models.Sneaker", null)
                        .WithMany("SneakerOccasions")
                        .HasForeignKey("SneakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Occasion", b =>
                {
                    b.Navigation("SneakerOccasions");
                });

            modelBuilder.Entity("backend_herhaling_sneakers.Models.Sneaker", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("SneakerOccasions");
                });
#pragma warning restore 612, 618
        }
    }
}
